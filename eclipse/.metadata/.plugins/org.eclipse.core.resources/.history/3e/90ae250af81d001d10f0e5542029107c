package com.Muurr.Bark.TileEntities;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import com.Muurr.Bark.Items.BarkItems;
import com.dunk.tfc.Reference;
import com.dunk.tfc.TerraFirmaCraft;
import com.dunk.tfc.Blocks.Devices.BlockBarrel;
import com.dunk.tfc.Core.TFCTabs;
import com.dunk.tfc.TileEntities.TEBarrel;
import com.dunk.tfc.TileEntities.TEBasket;
import com.dunk.tfc.api.TFCBlocks;
import com.dunk.tfc.api.TFCItems;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.item.EntityItem;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.IIcon;
import net.minecraft.world.IBlockAccess;
import net.minecraft.world.World;
import net.minecraftforge.common.util.ForgeDirection;

public class BlockBarkBasket extends BlockBarrel
{
	private IIcon[] strawIcons;

	public BlockBarkBasket()
	{
		super(Material.grass);
		this.setCreativeTab(TFCTabs.TFC_DEVICES);
		this.setBlockBounds(0.2f, 0, 0.2f, 0.8f, 0.7f, 0.8f);

	}

	@SideOnly(Side.CLIENT)
	@Override
	public void getSubBlocks(Item par1, CreativeTabs par2CreativeTabs, List par3List)
	{
		par3List.add(new ItemStack(this, 1, 0));
	}

	@Override
	public void registerBlockIcons(IIconRegister iconRegisterer)
	{
		strawIcons = new IIcon[3];
		strawIcons[0] = iconRegisterer.registerIcon(Reference.MOD_ID + ":" + "devices/Basket Top");
		strawIcons[1] = iconRegisterer.registerIcon(Reference.MOD_ID + ":" + "devices/Basket Side");
		strawIcons[2] = iconRegisterer.registerIcon(Reference.MOD_ID + ":" + "devices/Basket Bottom");
	}

	@Override
	public IIcon getIcon(int side, int meta)
	{

		if (side == 1)
			return strawIcons[0];
		else if (side == 0)
			return strawIcons[2];
		else
			return strawIcons[1];
	}

	@Override
	public IIcon getIcon(IBlockAccess access, int x, int y, int z, int side)
	{
		int meta = access.getBlockMetadata(x, y, z);
		if (side == 1)
			return strawIcons[0];
		else if (side == 0)
			return strawIcons[2];
		else
			return strawIcons[1];

	}

	@Override
	public boolean isOpaqueCube()
	{
		return false;
	}

	@Override
	public boolean renderAsNormalBlock()
	{
		return false;
	}

	@Override
	public int getRenderType()
	{
		return TFCBlocks.basketRenderId;
	}

	@Override
	public boolean onBlockActivated(World world, int x, int y, int z, EntityPlayer player, int side, float hitX,
			float hitY, float hitZ)
	{
		if (world.isRemote)
		{
			world.markBlockForUpdate(x, y, z);
			return true;
		}
		else
		{
			
			if (player.isSneaking())
			{
				return false;
			}
			if(!this.drunkChanceInteract(player))
			{
				return false;
			}
			if (world.getTileEntity(x, y, z) != null)
			{
				TEBarkBasket te = (TEBarkBasket) (world.getTileEntity(x, y, z));

				if (!handleInteraction(player, te))
				{
					player.openGui(TerraFirmaCraft.instance, 52, world, x, y, z);
					return true;
				}
				else
					return true;
			}
		}
		return false;
	}
	
	@Override
	public Item getItemDropped(int metadata, Random rand, int fortune)
	{
		return null;
	}
	
	@Override
	public void onBlockPreDestroy(World world, int i, int j, int k, int meta) 
	{
		if(!world.isRemote)
		{
			TEBasket te = (TEBasket)world.getTileEntity(i, j, k);
			te.ejectContents();
			EntityItem ei = new EntityItem(world, i, j, k, new ItemStack(BarkItems.birchbasket,1));
			world.spawnEntityInWorld(ei);
		}
	}
	
	@Override
	protected boolean handleInteraction(EntityPlayer player, TEBarrel te) 
	{		
		return false;
	}
	
	@Override
	public void onNeighborBlockChange(World world, int x,int y,int z,Block block)
	{
		if(!world.isSideSolid(x, y-1, z, ForgeDirection.UP))
		{
			TEBasket te = (TEBasket)world.getTileEntity(x, y, z);
			te.ejectContents();
			//EntityItem ei = new EntityItem(world, x, y, z, new ItemStack(TFCItems.strawBasket,1));
			//world.spawnEntityInWorld(ei);
			world.setBlockToAir(x, y, z);
		}
	}
	
	/**
	 * This returns a complete list of items dropped from this block.
	 */
	@Override
	public ArrayList<ItemStack> getDrops(World world, int x, int y, int z, int metadata, int fortune)
	{
		ArrayList<ItemStack> ret = new ArrayList<ItemStack>();

		int damageValue = getDamageValue(world, x, y, z);
		ret.add(new ItemStack(TFCItems.strawBasket, 1, damageValue));

		return ret;
	}

	@Override
	public TileEntity createNewTileEntity(World var1, int var2)
	{
		return new TEBasket();
	}
}
